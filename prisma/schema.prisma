// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    // NOTE: When using mysql or sqlserver, uncomment the @db.Text annotations in model Account below
    // Further reading:
    // https://next-auth.js.org/adapters/prisma#create-the-prisma-schema
    // https://www.prisma.io/docs/reference/api-reference/prisma-schema-reference#string
    url      = env("POSTGRES_PRISMA_URL")
}


model Encargado {
    id       String  @id @default(cuid())
    nombre   String
    apellido String
    telefono String? @unique
    email    String? @unique
    Kid      Kid[]
    activo   Boolean @default(true)
}

model Kid {
    id                String              @id @default(cuid())
    nombre            String
    apellido          String
    ano_nacimiento    DateTime            @db.Date
    encargado         Encargado           @relation(fields: [encargadoId], references: [id])
    encargadoId       String
    pagos             Pagos[]
    activo            Boolean             @default(true)
    Curso             Curso[]
    Asistencia_Alumno Asistencia_Alumno[]
}

model Pagos {
    id                   String    @id @default(cuid())
    fecha_inicio         DateTime?
    fecha_fin            DateTime?
    cantidad_asistencias Int
    fecha_pago           DateTime
    kid                  Kid       @relation(fields: [kidId], references: [id])
    kidId                String
    pago                 Boolean   @default(false)
}

model Curso {
    id          String       @id @default(cuid())
    nombre      String       @unique
    hora_inicio DateTime     @db.Time
    hora_fin    DateTime     @db.Time
    dia_semana  DIAS[]       @default([LUNES])
    asistencia  Asistencia[]
    activo      Boolean      @default(true)
    Kid         Kid[]
}

model Asistencia {
    id                 String              @id @default(cuid())
    curso              Curso               @relation(fields: [cursoId], references: [id])
    cursoId            String
    fecha              DateTime            @db.Date
    hora_toma          DateTime            @default(now())
    tomada_por         String?
    Asistencia_Alumnos Asistencia_Alumno[]
}

model Asistencia_Alumno {
    id           String     @id @default(cuid())
    asistencia   Asistencia @relation(fields: [asistenciaId], references: [id])
    asistenciaId String
    kid          Kid        @relation(fields: [kidId], references: [id])
    kidId        String
    asistio      Boolean    @default(false)

    @@index([asistenciaId, kidId])
}

enum DIAS {
    DOMINGO
    LUNES
    MARTES
    MIERCOLES
    JUEVES
    VIERNES
    SABADO
}
